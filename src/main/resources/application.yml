spring:
  datasource:
    url: jdbc:mysql://localhost:3306/asgard_service?useUnicode=true&characterEncoding=utf-8&useSSL=false&useInformationSchema=true&remarks=true
    username: choerodon
    password: 123456
  # 配置redis，作为asgard服务的通知消息队列
  redis:
    host: localhost
    port: 6379
    database: 7
eureka:
  instance:
    preferIpAddress: true
    leaseRenewalIntervalInSeconds: 10
    leaseExpirationDurationInSeconds: 30
    metadata-map:
      VERSION: v1
  client:
    serviceUrl:
      defaultZone: http://localhost:8000/eureka/
    registryFetchIntervalSeconds: 10
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 20000
ribbon:
  ReadTimeout: 5000
  ConnectTimeout: 5000
notify-service:
  ribbon:
    MaxAutoRetries: 0
    MaxAutoRetriesNextServer: 0
mybatis:
  mapperLocations: classpath*:/mapper/*.xml
  configuration: # 数据库下划线转驼峰配置
    mapUnderscoreToCamelCase: true
choerodon:
  saga:
    consumer:
      enabled: true # 启动消费端
      thread-num: 2 # saga消息消费线程池大小
      max-poll-size: 200 # 每次拉取消息最大数量
      poll-interval-ms: 1000 # 拉取间隔，默认1000毫秒
  asgard:
    quartz:
      auto-startup: true
      overwrite-existing-jobs: true
      properties:
        org.quartz.jobStore.tablePrefix: QRTZ_
        org.quartz.jobStore.driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
        org.quartz.jobStore.class: org.quartz.impl.jdbcjobstore.JobStoreTX
        org.quartz.jobStore.isClustered: true
        org.quartz.jobStore.misfireThreshold: 25000
        org.quartz.scheduler.makeSchedulerThreadDaemon: true
    saga:
      back-check-interval-ms: 1000 # 每隔多久回查(毫秒)
      un-confirmed-timeout-seconds: 300 # 没查超过多久仍未确认的消息(秒)
  eureka:
    event:
      max-cache-size: 300 # 存储的最大失败数量
      retry-time: 5 # 自动重试次数
      retry-interval: 3 # 自动重试间隔(秒)
      skip-services: config**, **register-server, **gateway**, zipkin**, hystrix**, oauth**
  schedule:
    consumer:
      enabled: true
      poll-interval-ms: 10000
db:
  type: mysql